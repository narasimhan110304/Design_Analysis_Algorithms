Two N-bit Binary Integer (2.1.4)
n=max(a.length,b.length)
arr[n+1]
carry=0
for i=1 to n
  arr[i]=(a[i]+b[i]+carry)%2
  carry=ceil(a[i]+b[i]+carry)/2
arr[n+1]=carry

Searching element in sorted array
for j=2 to a.length
  i=j-1
  while i>0 and a[i]>key
    a[i+1]=a[i]
    i--
  a[i+1]=key

Linear Search
for i=0 to a.length-1
  if a[i]=k return i+1
  return -1

Binary Search
low=0, high=n
mid=avg(low,high)
while low<=high
  if a[mid]=k return mid
  else if a[mid]>k --> high=mid-1
  else --> low=mid+1
return -1

Distance from Origin
func(arr)
  multimap<int,int>mp
  for i=0 to arr.length
    x=arr[i][0],y=arr[i][1]
    mp.insert(x^2+y^2,i)
    
**multimap is an autosorting map

Negative desc, Positive asc
for i,j=0 to n-1
  if arr[j]>arr[j+1]
    if arr[j]<0 neg++
    SWAP(arr[j],arr[j+1])
while neg>0
  SWAP(arr[i],arr[j])
  neg--, i++
